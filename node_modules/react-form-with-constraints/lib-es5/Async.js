"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var FormWithConstraints_1 = require("./FormWithConstraints");
var FieldFeedbacks_1 = require("./FieldFeedbacks");
var withValidateFieldEventEmitter_1 = require("./withValidateFieldEventEmitter");
var Status;
(function (Status) {
    Status[Status["None"] = 0] = "None";
    Status[Status["Pending"] = 1] = "Pending";
    Status[Status["Rejected"] = 2] = "Rejected";
    Status[Status["Resolved"] = 3] = "Resolved";
})(Status = exports.Status || (exports.Status = {}));
var AsyncComponent = (function (_super) {
    __extends(AsyncComponent, _super);
    function AsyncComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AsyncComponent;
}(React.Component));
var Async = (function (_super) {
    __extends(Async, _super);
    function Async() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            status: Status.None
        };
        _this.validate = function (input) {
            var _a = _this.context, form = _a.form, fieldFeedbacks = _a.fieldFeedbacks;
            var validations;
            var field = form.fieldsStore.getField(input.name);
            if (fieldFeedbacks.props.stop === 'first' && field.hasFeedbacks(fieldFeedbacks.key) ||
                fieldFeedbacks.props.stop === 'first-error' && field.hasErrors(fieldFeedbacks.key) ||
                fieldFeedbacks.props.stop === 'first-warning' && field.hasWarnings(fieldFeedbacks.key) ||
                fieldFeedbacks.props.stop === 'first-info' && field.hasInfos(fieldFeedbacks.key)) {
                _this.setState({ status: Status.None });
            }
            else {
                validations = _this._validate(input);
            }
            return validations;
        };
        return _this;
    }
    Async.prototype.getChildContext = function () {
        return {
            async: this
        };
    };
    Async.prototype.componentWillMount = function () {
        this.context.fieldFeedbacks.addValidateFieldEventListener(this.validate);
    };
    Async.prototype.componentWillUnmount = function () {
        this.context.fieldFeedbacks.removeValidateFieldEventListener(this.validate);
    };
    Async.prototype._validate = function (input) {
        return __awaiter(this, void 0, void 0, function () {
            var value, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setState({ status: Status.Pending });
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4, this.props.promise(input.value)];
                    case 2:
                        value = _a.sent();
                        this.setState({ status: Status.Resolved, value: value });
                        return [3, 4];
                    case 3:
                        e_1 = _a.sent();
                        this.setState({ status: Status.Rejected, value: e_1 });
                        return [3, 4];
                    case 4: return [2, this.emitValidateFieldEvent(input)];
                }
            });
        });
    };
    Async.prototype.render = function () {
        var _a = this, props = _a.props, state = _a.state;
        var element = null;
        switch (state.status) {
            case Status.None:
                break;
            case Status.Pending:
                if (props.pending)
                    element = props.pending;
                break;
            case Status.Resolved:
                if (props.then)
                    element = props.then(state.value);
                break;
            case Status.Rejected:
                if (props.catch)
                    element = props.catch(state.value);
                break;
        }
        return element;
    };
    Async.contextTypes = {
        form: PropTypes.instanceOf(FormWithConstraints_1.FormWithConstraints).isRequired,
        fieldFeedbacks: PropTypes.instanceOf(FieldFeedbacks_1.FieldFeedbacks).isRequired
    };
    Async.childContextTypes = {
        async: PropTypes.instanceOf(Async).isRequired
    };
    return Async;
}(withValidateFieldEventEmitter_1.withValidateFieldEventEmitter(AsyncComponent)));
exports.Async = Async;
//# sourceMappingURL=data:application/json;base64,