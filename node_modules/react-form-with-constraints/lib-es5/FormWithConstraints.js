"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var withValidateFieldEventEmitter_1 = require("./withValidateFieldEventEmitter");
var withFieldWillValidateEventEmitter_1 = require("./withFieldWillValidateEventEmitter");
var withFieldDidValidateEventEmitter_1 = require("./withFieldDidValidateEventEmitter");
var withFieldDidResetEventEmitter_1 = require("./withFieldDidResetEventEmitter");
var InputElement_1 = require("./InputElement");
var FieldsStore_1 = require("./FieldsStore");
var flattenDeep_1 = require("./flattenDeep");
var notUndefined_1 = require("./notUndefined");
var FormWithConstraintsComponent = (function (_super) {
    __extends(FormWithConstraintsComponent, _super);
    function FormWithConstraintsComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FormWithConstraintsComponent;
}(React.Component));
var FormWithConstraints = (function (_super) {
    __extends(FormWithConstraints, _super);
    function FormWithConstraints() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.form = null;
        _this.fieldsStore = new FieldsStore_1.FieldsStore();
        _this.fieldFeedbacksKeyCounter = 0;
        return _this;
    }
    FormWithConstraints.prototype.getChildContext = function () {
        return {
            form: this
        };
    };
    FormWithConstraints.prototype.computeFieldFeedbacksKey = function () {
        return "" + this.fieldFeedbacksKeyCounter++;
    };
    FormWithConstraints.prototype.validateFields = function () {
        var inputsOrNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            inputsOrNames[_i] = arguments[_i];
        }
        return this._validateFields.apply(this, __spread([true], inputsOrNames));
    };
    FormWithConstraints.prototype.validateForm = function () {
        return this.validateFieldsWithoutFeedback();
    };
    FormWithConstraints.prototype.validateFieldsWithoutFeedback = function () {
        var inputsOrNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            inputsOrNames[_i] = arguments[_i];
        }
        return this._validateFields.apply(this, __spread([false], inputsOrNames));
    };
    FormWithConstraints.prototype._validateFields = function (forceValidateFields) {
        var inputsOrNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            inputsOrNames[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var e_1, _a, fields, inputs, inputs_1, inputs_1_1, input, field, e_1_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        fields = new Array();
                        inputs = this.normalizeInputs.apply(this, __spread(inputsOrNames));
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 6, 7, 8]);
                        inputs_1 = __values(inputs), inputs_1_1 = inputs_1.next();
                        _b.label = 2;
                    case 2:
                        if (!!inputs_1_1.done) return [3, 5];
                        input = inputs_1_1.value;
                        return [4, this.validateField(forceValidateFields, new InputElement_1.InputElement(input))];
                    case 3:
                        field = _b.sent();
                        if (field !== undefined)
                            fields.push(field);
                        _b.label = 4;
                    case 4:
                        inputs_1_1 = inputs_1.next();
                        return [3, 2];
                    case 5: return [3, 8];
                    case 6:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3, 8];
                    case 7:
                        try {
                            if (inputs_1_1 && !inputs_1_1.done && (_a = inputs_1.return)) _a.call(inputs_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7];
                    case 8: return [2, fields];
                }
            });
        });
    };
    FormWithConstraints.prototype.validateField = function (forceValidateFields, input) {
        return __awaiter(this, void 0, void 0, function () {
            var fieldName, field, arrayOfArrays;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        fieldName = input.name;
                        field = this.fieldsStore.getField(fieldName);
                        if (!(field === undefined)) return [3, 1];
                        return [3, 3];
                    case 1:
                        if (!(forceValidateFields || !field.hasFeedbacks())) return [3, 3];
                        field.clearValidations();
                        this.emitFieldWillValidateEvent(fieldName);
                        return [4, this.emitValidateFieldEvent(input)];
                    case 2:
                        arrayOfArrays = _a.sent();
                        console.assert(JSON.stringify(flattenDeep_1.default(arrayOfArrays).filter(notUndefined_1.default))
                            ===
                                JSON.stringify(field.validations), "FieldsStore does not match emitValidateFieldEvent() result, did the user changed the input rapidly?");
                        this.emitFieldDidValidateEvent(field);
                        _a.label = 3;
                    case 3: return [2, field];
                }
            });
        });
    };
    FormWithConstraints.prototype.normalizeInputs = function () {
        var _this = this;
        var inputsOrNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            inputsOrNames[_i] = arguments[_i];
        }
        var inputs;
        if (inputsOrNames.length === 0) {
            inputs = __spread(this.form.querySelectorAll('[name]'));
            inputs = inputs.filter(function (input) { return input.validity !== undefined; });
            inputs
                .filter(function (input) { return input.type !== 'checkbox' && input.type !== 'radio'; })
                .map(function (input) { return input.name; })
                .forEach(function (name, index, self) {
                if (self.indexOf(name) !== index) {
                    throw new Error("Multiple elements matching '[name=\"" + name + "\"]' inside the form");
                }
            });
        }
        else {
            inputs = inputsOrNames.map(function (input) {
                if (typeof input === 'string') {
                    var query = "[name=\"" + input + "\"]";
                    var elements = __spread(_this.form.querySelectorAll(query));
                    if (elements.filter(function (el) { return el.validity === undefined; }).length > 0) {
                        throw new Error("'" + query + "' should match an <input>, <select> or <textarea>");
                    }
                    if (elements.filter(function (el) { return el.type !== 'checkbox' && el.type !== 'radio'; }).length > 1) {
                        throw new Error("Multiple elements matching '" + query + "' inside the form");
                    }
                    var element = elements[0];
                    if (element === undefined) {
                        throw new Error("Could not find field '" + query + "' inside the form");
                    }
                    return element;
                }
                else {
                    return input;
                }
            });
        }
        return inputs;
    };
    FormWithConstraints.prototype.isValid = function () {
        return this.fieldsStore.isValid();
    };
    FormWithConstraints.prototype.hasFeedbacks = function () {
        return this.fieldsStore.hasFeedbacks();
    };
    FormWithConstraints.prototype.reset = function () {
        return this.resetFields();
    };
    FormWithConstraints.prototype.resetFields = function () {
        var inputsOrNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            inputsOrNames[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var e_2, _a, fields, inputs, inputs_2, inputs_2_1, input, field, e_2_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        fields = new Array();
                        inputs = this.normalizeInputs.apply(this, __spread(inputsOrNames));
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 6, 7, 8]);
                        inputs_2 = __values(inputs), inputs_2_1 = inputs_2.next();
                        _b.label = 2;
                    case 2:
                        if (!!inputs_2_1.done) return [3, 5];
                        input = inputs_2_1.value;
                        return [4, this.resetField(new InputElement_1.InputElement(input))];
                    case 3:
                        field = _b.sent();
                        if (field !== undefined)
                            fields.push(field);
                        _b.label = 4;
                    case 4:
                        inputs_2_1 = inputs_2.next();
                        return [3, 2];
                    case 5: return [3, 8];
                    case 6:
                        e_2_1 = _b.sent();
                        e_2 = { error: e_2_1 };
                        return [3, 8];
                    case 7:
                        try {
                            if (inputs_2_1 && !inputs_2_1.done && (_a = inputs_2.return)) _a.call(inputs_2);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7];
                    case 8: return [2, fields];
                }
            });
        });
    };
    FormWithConstraints.prototype.resetField = function (input) {
        return __awaiter(this, void 0, void 0, function () {
            var fieldName, field;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        fieldName = input.name;
                        field = this.fieldsStore.getField(fieldName);
                        if (!(field === undefined)) return [3, 1];
                        return [3, 3];
                    case 1:
                        field.clearValidations();
                        return [4, this.emitFieldDidResetEvent(field)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2, field];
                }
            });
        });
    };
    FormWithConstraints.prototype.render = function () {
        var _this = this;
        return React.createElement("form", __assign({ ref: function (form) { return _this.form = form; } }, this.props));
    };
    FormWithConstraints.childContextTypes = {
        form: PropTypes.instanceOf(FormWithConstraints).isRequired
    };
    return FormWithConstraints;
}(withFieldDidResetEventEmitter_1.withFieldDidResetEventEmitter(withFieldWillValidateEventEmitter_1.withFieldWillValidateEventEmitter(withFieldDidValidateEventEmitter_1.withFieldDidValidateEventEmitter(withValidateFieldEventEmitter_1.withValidateFieldEventEmitter(FormWithConstraintsComponent))))));
exports.FormWithConstraints = FormWithConstraints;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybVdpdGhDb25zdHJhaW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Gb3JtV2l0aENvbnN0cmFpbnRzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLHNDQUF3QztBQUV4QyxpRkFBZ0Y7QUFDaEYseUZBQXdGO0FBQ3hGLHVGQUFzRjtBQUN0RixpRkFBZ0Y7QUFFaEYsK0NBQThDO0FBQzlDLDZDQUE0QztBQUU1Qyw2Q0FBd0M7QUFDeEMsK0NBQTBDO0FBUzFDO0lBQTJDLGdEQUF5QztJQUFwRjs7SUFBc0YsQ0FBQztJQUFELG1DQUFDO0FBQUQsQ0FBQyxBQUF2RixDQUEyQyxLQUFLLENBQUMsU0FBUyxHQUE2QjtBQUN2RjtJQUVJLHVDQWNDO0lBaEJMO1FBQUEscUVBa05DO1FBckxTLFVBQUksR0FBMkIsSUFBSSxDQUFDO1FBRTVDLGlCQUFXLEdBQUcsSUFBSSx5QkFBVyxFQUFFLENBQUM7UUFFeEIsOEJBQXdCLEdBQUcsQ0FBQyxDQUFDOztJQWlMdkMsQ0FBQztJQTVMQyw2Q0FBZSxHQUFmO1FBQ0UsT0FBTztZQUNMLElBQUksRUFBRSxJQUFJO1NBQ1gsQ0FBQztJQUNKLENBQUM7SUFRRCxzREFBd0IsR0FBeEI7UUFDRSxPQUFPLEtBQUcsSUFBSSxDQUFDLHdCQUF3QixFQUFJLENBQUM7SUFDOUMsQ0FBQztJQU1ELDRDQUFjLEdBQWQ7UUFBZSx1QkFBOEM7YUFBOUMsVUFBOEMsRUFBOUMscUJBQThDLEVBQTlDLElBQThDO1lBQTlDLGtDQUE4Qzs7UUFDM0QsT0FBTyxJQUFJLENBQUMsZUFBZSxPQUFwQixJQUFJLFlBQTJDLElBQUksR0FBSyxhQUFhLEdBQUU7SUFDaEYsQ0FBQztJQUdELDBDQUFZLEdBQVo7UUFDRSxPQUFPLElB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QUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQzs2QkFFL0MsQ0FBQSxLQUFLLEtBQUssU0FBUyxDQUFBLEVBQW5CLGNBQW1COzs7d0JBSXJCLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO3dCQUN6QixXQUFNLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsRUFBQTs7d0JBQXhDLFNBQXdDLENBQUM7OzRCQUczQyxXQUFPLEtBQUssRUFBQzs7OztLQUNkO0lBRUQsb0NBQU0sR0FBTjtRQUFBLGlCQUVDO1FBREMsT0FBTyx1Q0FBTSxHQUFHLEVBQUUsVUFBQSxJQUFJLElBQUksT0FBQSxLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksRUFBaEIsQ0FBZ0IsSUFBTSxJQUFJLENBQUMsS0FBSyxFQUFJLENBQUM7SUFDakUsQ0FBQztJQTlMTSxxQ0FBaUIsR0FBeUQ7UUFDL0UsSUFBSSxFQUFFLFNBQVMsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxVQUFVO0tBQzNELENBQUM7SUE2TEosMEJBQUM7Q0FBQSxBQWxORCxDQUVJLDZEQUE2QixDQUMzQixxRUFBaUMsQ0FDL0IsbUVBQWdDLENBQzlCLDZEQUE2QixDQU8zQiw0QkFBNEIsQ0FDN0IsQ0FDRixDQUNGLENBQ0YsR0FrTUo7QUFsTlksa0RBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgeyB3aXRoVmFsaWRhdGVGaWVsZEV2ZW50RW1pdHRlciB9IGZyb20gJy4vd2l0aFZhbGlkYXRlRmllbGRFdmVudEVtaXR0ZXInO1xuaW1wb3J0IHsgd2l0aEZpZWxkV2lsbFZhbGlkYXRlRXZlbnRFbWl0dGVyIH0gZnJvbSAnLi93aXRoRmllbGRXaWxsVmFsaWRhdGVFdmVudEVtaXR0ZXInO1xuaW1wb3J0IHsgd2l0aEZpZWxkRGlkVmFsaWRhdGVFdmVudEVtaXR0ZXIgfSBmcm9tICcuL3dpdGhGaWVsZERpZFZhbGlkYXRlRXZlbnRFbWl0dGVyJztcbmltcG9ydCB7IHdpdGhGaWVsZERpZFJlc2V0RXZlbnRFbWl0dGVyIH0gZnJvbSAnLi93aXRoRmllbGREaWRSZXNldEV2ZW50RW1pdHRlcic7XG5pbXBvcnQgRmllbGQgZnJvbSAnLi9GaWVsZCc7XG5pbXBvcnQgeyBJbnB1dEVsZW1lbnQgfSBmcm9tICcuL0lucHV0RWxlbWVudCc7XG5pbXBvcnQgeyBGaWVsZHNTdG9yZSB9IGZyb20gJy4vRmllbGRzU3RvcmUnO1xuaW1wb3J0IEZpZWxkRmVlZGJhY2tWYWxpZGF0aW9uIGZyb20gJy4vRmllbGRGZWVkYmFja1ZhbGlkYXRpb24nO1xuaW1wb3J0IGZsYXR0ZW5EZWVwIGZyb20gJy4vZmxhdHRlbkRlZXAnO1xuaW1wb3J0IG5vdFVuZGVmaW5lZCBmcm9tICcuL25vdFVuZGVmaW5lZCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVdpdGhDb25zdHJhaW50c0NoaWxkQ29udGV4dCB7XG4gIGZvcm06IEZvcm1XaXRoQ29uc3RyYWludHM7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVdpdGhDb25zdHJhaW50c1Byb3BzIGV4dGVuZHMgUmVhY3QuRm9ybUhUTUxBdHRyaWJ1dGVzPEhUTUxGb3JtRWxlbWVudD4ge1xufVxuXG5jbGFzcyBGb3JtV2l0aENvbnN0cmFpbnRzQ29tcG9uZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PEZvcm1XaXRoQ29uc3RyYWludHNQcm9wcz4ge31cbmV4cG9ydCBjbGFzcyBGb3JtV2l0aENvbnN0cmFpbnRzXG4gIGV4dGVuZHNcbiAgICB3aXRoRmllbGREaWRSZXNldEV2ZW50RW1pdHRlcihcbiAgICAgIHdpdGhGaWVsZFdpbGxWYWxpZGF0ZUV2ZW50RW1pdHRlcihcbiAgICAgICAgd2l0aEZpZWxkRGlkVmFsaWRhdGVFdmVudEVtaXR0ZXIoXG4gICAgICAgICAgd2l0aFZhbGlkYXRlRmllbGRFdmVudEVtaXR0ZXI8XG4gICAgICAgICAgICAvLyBGaWVsZEZlZWRiYWNrIHJldHVybnMgRmllbGRGZWVkYmFja1ZhbGlkYXRpb25cbiAgICAgICAgICAgIC8vIEFzeW5jIHJldHVybnMgRmllbGRGZWVkYmFja1ZhbGlkYXRpb25bXSB8IHVuZGVmaW5lZFxuICAgICAgICAgICAgLy8gRmllbGRGZWVkYmFja3MgcmV0dXJucyAoRmllbGRGZWVkYmFja1ZhbGlkYXRpb24gfCB1bmRlZmluZWQpW10gfCB1bmRlZmluZWRcbiAgICAgICAgICAgIEZpZWxkRmVlZGJhY2tWYWxpZGF0aW9uIHwgKEZpZWxkRmVlZGJhY2tWYWxpZGF0aW9uIHwgdW5kZWZpbmVkKVtdIHwgdW5kZWZpbmVkLFxuICAgICAgICAgICAgdHlwZW9mIEZvcm1XaXRoQ29uc3RyYWludHNDb21wb25lbnRcbiAgICAgICAgICA+KFxuICAgICAgICAgICAgRm9ybVdpdGhDb25zdHJhaW50c0NvbXBvbmVudFxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgKVxuICAgIClcbiAgaW1wbGVtZW50cyBSZWFjdC5DaGlsZENvbnRleHRQcm92aWRlcjxGb3JtV2l0aENvbnN0cmFpbnRzQ2hpbGRDb250ZXh0PiB7XG5cbiAgc3RhdGljIGNoaWxkQ29udGV4dFR5cGVzOiBSZWFjdC5WYWxpZGF0aW9uTWFwPEZvcm1XaXRoQ29uc3RyYWludHNDaGlsZENvbnRleHQ+ID0ge1xuICAgIGZvcm06IFByb3BUeXBlcy5pbnN0YW5jZU9mKEZvcm1XaXRoQ29uc3RyYWludHMpLmlzUmVxdWlyZWRcbiAgfTtcbiAgZ2V0Q2hpbGRDb250ZXh0KCk6IEZvcm1XaXRoQ29uc3RyYWludHNDaGlsZENvbnRleHQge1xuICAgIHJldHVybiB7XG4gICAgICBmb3JtOiB0aGlzXG4gICAgfTtcbiAgfVxuXG4gIC8vIENvdWxkIGJlIG5hbWVkIGlubmVyUmVmIGluc3RlYWQsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vYW50LWRlc2lnbi9hbnQtZGVzaWduL2lzc3Vlcy81NDg5I2lzc3VlY29tbWVudC0zMzIyMDg2NTJcbiAgcHJpdmF0ZSBmb3JtOiBIVE1MRm9ybUVsZW1lbnQgfCBudWxsID0gbnVsbDtcblxuICBmaWVsZHNTdG9yZSA9IG5ldyBGaWVsZHNTdG9yZSgpO1xuXG4gIHByaXZhdGUgZmllbGRGZWVkYmFja3NLZXlDb3VudGVyID0gMDtcbiAgY29tcHV0ZUZpZWxkRmVlZGJhY2tzS2V5KCkge1xuICAgIHJldHVybiBgJHt0aGlzLmZpZWxkRmVlZGJhY2tzS2V5Q291bnRlcisrfWA7XG4gIH1cblxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoZSBnaXZlbiBmaWVsZHMsIGVpdGhlciBIVE1MSW5wdXRFbGVtZW50cyBvciBmaWVsZCBuYW1lcy5cbiAgICogSWYgY2FsbGVkIHdpdGhvdXQgYXJndW1lbnRzLCB2YWxpZGF0ZXMgYWxsIGZpZWxkcyAoJCgnW25hbWVdJykpLlxuICAgKi9cbiAgdmFsaWRhdGVGaWVsZHMoLi4uaW5wdXRzT3JOYW1lczogQXJyYXk8SW5wdXRFbGVtZW50IHwgc3RyaW5nPikge1xuICAgIHJldHVybiB0aGlzLl92YWxpZGF0ZUZpZWxkcygvKiBmb3JjZVZhbGlkYXRlRmllbGRzICovIHRydWUsIC4uLmlucHV0c09yTmFtZXMpO1xuICB9XG5cbiAgLy8gVE9ETyBUbyBiZSByZW1vdmVkIGluIHRoZSBmdXR1cmU/XG4gIHZhbGlkYXRlRm9ybSgpIHtcbiAgICByZXR1cm4gdGhpcy52YWxpZGF0ZUZpZWxkc1dpdGhvdXRGZWVkYmFjaygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFZhbGlkYXRlcyBmaWVsZHMgd2l0aG91dCBmZWVkYmFjayBvbmx5LlxuICAgKi9cbiAgdmFsaWRhdGVGaWVsZHNXaXRob3V0RmVlZGJhY2soLi4uaW5wdXRzT3JOYW1lczogQXJyYXk8SW5wdXRFbGVtZW50IHwgc3RyaW5nPikge1xuICAgIHJldHVybiB0aGlzLl92YWxpZGF0ZUZpZWxkcygvKiBmb3JjZVZhbGlkYXRlRmllbGRzICovIGZhbHNlLCAuLi5pbnB1dHNPck5hbWVzKTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgX3ZhbGlkYXRlRmllbGRzKGZvcmNlVmFsaWRhdGVGaWVsZHM6IGJvb2xlYW4sIC4uLmlucHV0c09yTmFtZXM6IEFycmF5PElucHV0RWxlbWVudCB8IHN0cmluZz4pIHtcbiAgICBjb25zdCBmaWVsZHMgPSBuZXcgQXJyYXk8UmVhZG9ubHk8RmllbGQ+PigpO1xuXG4gICAgY29uc3QgaW5wdXRzID0gdGhpcy5ub3JtYWxpemVJbnB1dHMoLi4uaW5wdXRzT3JOYW1lcyk7XG5cbiAgICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgICAgY29uc3QgZmllbGQgPSBhd2FpdCB0aGlzLnZhbGlkYXRlRmllbGQoZm9yY2VWYWxpZGF0ZUZpZWxkcywgbmV3IElucHV0RWxlbWVudChpbnB1dCkpO1xuICAgICAgaWYgKGZpZWxkICE9PSB1bmRlZmluZWQpIGZpZWxkcy5wdXNoKGZpZWxkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmllbGRzO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyB2YWxpZGF0ZUZpZWxkKGZvcmNlVmFsaWRhdGVGaWVsZHM6IGJvb2xlYW4sIGlucHV0OiBJbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBmaWVsZE5hbWUgPSBpbnB1dC5uYW1lO1xuICAgIGNvbnN0IGZpZWxkID0gdGhpcy5maWVsZHNTdG9yZS5nZXRGaWVsZChmaWVsZE5hbWUpO1xuXG4gICAgaWYgKGZpZWxkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIE1lYW5zIHRoZSBmaWVsZCAoPGlucHV0IG5hbWU9XCJ1c2VybmFtZVwiPikgZG9lcyBub3QgaGF2ZSBhIEZpZWxkRmVlZGJhY2tzXG4gICAgICAvLyBzbyBsZXQncyBpZ25vcmUgdGhpcyBmaWVsZFxuICAgIH1cblxuICAgIGVsc2UgaWYgKGZvcmNlVmFsaWRhdGVGaWVsZHMgfHwgIWZpZWxkLmhhc0ZlZWRiYWNrcygpKSB7XG4gICAgICBmaWVsZC5jbGVhclZhbGlkYXRpb25zKCk7XG5cbiAgICAgIHRoaXMuZW1pdEZpZWxkV2lsbFZhbGlkYXRlRXZlbnQoZmllbGROYW1lKTtcblxuICAgICAgY29uc3QgYXJyYXlPZkFycmF5cyA9IGF3YWl0IHRoaXMuZW1pdFZhbGlkYXRlRmllbGRFdmVudChpbnB1dCk7XG5cbiAgICAgIC8vIEludGVybmFsIGNoZWNrIHRoYXQgZXZlcnl0aGluZyBpcyBPS1xuICAgICAgLy8gQ2FuIGJlIHRlbXBvcmFyeSBvdXQgb2Ygc3luYyBpZiB0aGUgdXNlciByYXBpZGx5IGNoYW5nZSB0aGUgaW5wdXQsIGluIHRoaXMgY2FzZTpcbiAgICAgIC8vIGVtaXRGaWVsZFdpbGxWYWxpZGF0ZUV2ZW50KCkgcmV0dXJucyB0aGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBjaGFuZ2Ugd2hpbGUgdGhlIHN0b3JlIGFscmVhZHkgY29udGFpbnMgdGhlIGZpbmFsIHZhbGlkYXRpb25zXG4gICAgICBjb25zb2xlLmFzc2VydChcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoZmxhdHRlbkRlZXA8RmllbGRGZWVkYmFja1ZhbGlkYXRpb24gfCB1bmRlZmluZWQ+KGFycmF5T2ZBcnJheXMpLmZpbHRlcihub3RVbmRlZmluZWQpKSAvKiB2YWxpZGF0aW9uc0Zyb21FbWl0VmFsaWRhdGVGaWVsZEV2ZW50ICovXG4gICAgICAgID09PVxuICAgICAgICBKU09OLnN0cmluZ2lmeShmaWVsZC52YWxpZGF0aW9ucykgLyogdmFsaWRhdGlvbnNGcm9tU3RvcmUgKi9cbiAgICAgICAgLFxuICAgICAgICBgRmllbGRzU3RvcmUgZG9lcyBub3QgbWF0Y2ggZW1pdFZhbGlkYXRlRmllbGRFdmVudCgpIHJlc3VsdCwgZGlkIHRoZSB1c2VyIGNoYW5nZWQgdGhlIGlucHV0IHJhcGlkbHk/YFxuICAgICAgKTtcblxuICAgICAgdGhpcy5lbWl0RmllbGREaWRWYWxpZGF0ZUV2ZW50KGZpZWxkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmllbGQ7XG4gIH1cblxuICAvLyBJZiBjYWxsZWQgd2l0aG91dCBhcmd1bWVudHMsIHJldHVybnMgYWxsIGZpZWxkcyAoJCgnW25hbWVdJykpXG4gIC8vIFJldHVybnMgdGhlIGlucHV0cyBpbiB0aGUgc2FtZSBvcmRlciB0aGV5IHdlcmUgZ2l2ZW5cbiAgcHJvdGVjdGVkIG5vcm1hbGl6ZUlucHV0cyguLi5pbnB1dHNPck5hbWVzOiBBcnJheTxJbnB1dEVsZW1lbnQgLyogSFRNTElucHV0RWxlbWVudCB8IEhUTUxTZWxlY3RFbGVtZW50IHwgSFRNTFRleHRBcmVhRWxlbWVudC4uLiAqLyB8IHN0cmluZz4pIHtcbiAgICBsZXQgaW5wdXRzO1xuXG4gICAgaWYgKGlucHV0c09yTmFtZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAvLyBbbmFtZV0gbWF0Y2hlcyA8aW5wdXQgbmFtZT1cIi4uLlwiPiwgPHNlbGVjdCBuYW1lPVwiLi4uXCI+LCA8YnV0dG9uIG5hbWU9XCIuLi5cIj4sIC4uLlxuICAgICAgLy8gU2VlIENvbnZlcnQgSmF2YVNjcmlwdCBOb2RlTGlzdCB0byBBcnJheT8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzMzODIyNTI2Lzk5MDM1NlxuICAgICAgaW5wdXRzID0gWy4uLnRoaXMuZm9ybSEucXVlcnlTZWxlY3RvckFsbDxIVE1MSW5wdXRFbGVtZW50PignW25hbWVdJyldO1xuXG4gICAgICAvLyBSZW1vdmUgZWxlbWVudHMgd2l0aG91dCBWYWxpZGl0eVN0YXRlLCBleGFtcGxlOlxuICAgICAgLy8gPGlmcmFtZSBzcmM9XCJodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS4uLlwiIG5hbWU9XCJhLTQ5ZWtpcHFmbXdzdlwiPlxuICAgICAgLy8gV2l0aG91dCB0aGlzIGNoZWNrLCBwb3NzaWJsZSBjcmFzaCBpbnNpZGUgSW5wdXRFbGVtZW50IGlzIFwiVHlwZUVycm9yOiBDYW5ub3QgcmVhZCBwcm9wZXJ0eSAnYmFkSW5wdXQnIG9mIHVuZGVmaW5lZFwiXG4gICAgICAvL1xuICAgICAgLy8gVmFsaWRpdHlTdGF0ZSBpcyBhdmFpbGFibGUgZm9yIChsaWIuZG9tLmQudHMpOlxuICAgICAgLy8gSFRNTEJ1dHRvbkVsZW1lbnQsIEhUTUxGaWVsZFNldEVsZW1lbnQsIEhUTUxJbnB1dEVsZW1lbnQsIEhUTUxPYmplY3RFbGVtZW50LFxuICAgICAgLy8gSFRNTE91dHB1dEVsZW1lbnQsIEhUTUxTZWxlY3RFbGVtZW50LCBIVE1MVGV4dEFyZWFFbGVtZW50XG4gICAgICAvL1xuICAgICAgLy8gVmFsaWRpdHlTdGF0ZSBpcyBzdXBwb3J0ZWQgYnkgSUUgPj0gMTBcbiAgICAgIGlucHV0cyA9IGlucHV0cy5maWx0ZXIoaW5wdXQgPT4gaW5wdXQudmFsaWRpdHkgIT09IHVuZGVmaW5lZCk7XG5cbiAgICAgIC8vIENoZWNrIHdlIGhhdmUgdW5pcXVlIG5hbWVzXG4gICAgICBpbnB1dHNcbiAgICAgICAgLmZpbHRlcihpbnB1dCA9PiBpbnB1dC50eXBlICE9PSAnY2hlY2tib3gnICYmIGlucHV0LnR5cGUgIT09ICdyYWRpbycpXG4gICAgICAgIC5tYXAoaW5wdXQgPT4gaW5wdXQubmFtZSlcbiAgICAgICAgLmZvckVhY2goKG5hbWUsIGluZGV4LCBzZWxmKSA9PiB7XG4gICAgICAgICAgaWYgKHNlbGYuaW5kZXhPZihuYW1lKSAhPT0gaW5kZXgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTXVsdGlwbGUgZWxlbWVudHMgbWF0Y2hpbmcgJ1tuYW1lPVwiJHtuYW1lfVwiXScgaW5zaWRlIHRoZSBmb3JtYCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5wdXRzID0gaW5wdXRzT3JOYW1lcy5tYXAoaW5wdXQgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gYFtuYW1lPVwiJHtpbnB1dH1cIl1gO1xuICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gWy4uLnRoaXMuZm9ybSEucXVlcnlTZWxlY3RvckFsbDxIVE1MSW5wdXRFbGVtZW50PihxdWVyeSldO1xuXG4gICAgICAgICAgLy8gQ2hlY2tzXG5cbiAgICAgICAgICBpZiAoZWxlbWVudHMuZmlsdGVyKGVsID0+IGVsLnZhbGlkaXR5ID09PSB1bmRlZmluZWQpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIFNob3VsZCBub3QgbWF0Y2ggc29tZXRoaW5nIGxpa2VcbiAgICAgICAgICAgIC8vIDxpZnJhbWUgc3JjPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEuLi5cIiBuYW1lPVwiYS00OWVraXBxZm13c3ZcIj5cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJyR7cXVlcnl9JyBzaG91bGQgbWF0Y2ggYW4gPGlucHV0PiwgPHNlbGVjdD4gb3IgPHRleHRhcmVhPmApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZWxlbWVudHMuZmlsdGVyKGVsID0+IGVsLnR5cGUgIT09ICdjaGVja2JveCcgJiYgZWwudHlwZSAhPT0gJ3JhZGlvJykubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBsZSBlbGVtZW50cyBtYXRjaGluZyAnJHtxdWVyeX0nIGluc2lkZSB0aGUgZm9ybWApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBlbGVtZW50ID0gZWxlbWVudHNbMF07XG4gICAgICAgICAgaWYgKGVsZW1lbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgZmluZCBmaWVsZCAnJHtxdWVyeX0nIGluc2lkZSB0aGUgZm9ybWApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGlucHV0cztcbiAgfVxuXG4gIC8vIE1vcmUgbGlrZSBzZWVtc1RvQmVWYWxpZCgpOiByZXR1cm4gdHJ1ZSBpZiBmaWVsZHMgYXJlIHVudG91Y2hlZFxuICBpc1ZhbGlkKCkge1xuICAgIHJldHVybiB0aGlzLmZpZWxkc1N0b3JlLmlzVmFsaWQoKTtcbiAgfVxuXG4gIGhhc0ZlZWRiYWNrcygpIHtcbiAgICByZXR1cm4gdGhpcy5maWVsZHNTdG9yZS5oYXNGZWVkYmFja3MoKTtcbiAgfVxuXG4gIC8vIFRPRE8gVG8gYmUgcmVtb3ZlZCBpbiB0aGUgZnV0dXJlP1xuICByZXNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXNldEZpZWxkcygpO1xuICB9XG5cbiAgYXN5bmMgcmVzZXRGaWVsZHMoLi4uaW5wdXRzT3JOYW1lczogQXJyYXk8SW5wdXRFbGVtZW50IHwgc3RyaW5nPikge1xuICAgIGNvbnN0IGZpZWxkcyA9IG5ldyBBcnJheTxSZWFkb25seTxGaWVsZD4+KCk7XG5cbiAgICBjb25zdCBpbnB1dHMgPSB0aGlzLm5vcm1hbGl6ZUlucHV0cyguLi5pbnB1dHNPck5hbWVzKTtcblxuICAgIGZvciAoY29uc3QgaW5wdXQgb2YgaW5wdXRzKSB7XG4gICAgICBjb25zdCBmaWVsZCA9IGF3YWl0IHRoaXMucmVzZXRGaWVsZChuZXcgSW5wdXRFbGVtZW50KGlucHV0KSk7XG4gICAgICBpZiAoZmllbGQgIT09IHVuZGVmaW5lZCkgZmllbGRzLnB1c2goZmllbGQpO1xuICAgIH1cblxuICAgIHJldHVybiBmaWVsZHM7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHJlc2V0RmllbGQoaW5wdXQ6IElucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGZpZWxkTmFtZSA9IGlucHV0Lm5hbWU7XG4gICAgY29uc3QgZmllbGQgPSB0aGlzLmZpZWxkc1N0b3JlLmdldEZpZWxkKGZpZWxkTmFtZSk7XG5cbiAgICBpZiAoZmllbGQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gTWVhbnMgdGhlIGZpZWxkICg8aW5wdXQgbmFtZT1cInVzZXJuYW1lXCI+KSBkb2VzIG5vdCBoYXZlIGEgRmllbGRGZWVkYmFja3NcbiAgICAgIC8vIHNvIGxldCdzIGlnbm9yZSB0aGlzIGZpZWxkXG4gICAgfSBlbHNlIHtcbiAgICAgIGZpZWxkLmNsZWFyVmFsaWRhdGlvbnMoKTtcbiAgICAgIGF3YWl0IHRoaXMuZW1pdEZpZWxkRGlkUmVzZXRFdmVudChmaWVsZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpZWxkO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8Zm9ybSByZWY9e2Zvcm0gPT4gdGhpcy5mb3JtID0gZm9ybX0gey4uLnRoaXMucHJvcHN9IC8+O1xuICB9XG59XG4iXX0=