export interface TextInput {
    props: {
        name: string;
        value?: string;
    };
}
export declare class InputElement {
    readonly name: string;
    readonly type: string;
    readonly value: string;
    readonly validity: IValidityState;
    readonly validationMessage: string;
    constructor(input: InputElement | TextInput);
}
export declare class IValidityState implements ValidityState {
    readonly badInput: boolean;
    readonly customError: boolean;
    readonly patternMismatch: boolean;
    readonly rangeOverflow: boolean;
    readonly rangeUnderflow: boolean;
    readonly stepMismatch: boolean;
    readonly tooLong: boolean;
    readonly tooShort: boolean;
    readonly typeMismatch: boolean;
    readonly valid: boolean;
    readonly valueMissing: boolean;
    constructor(validity: ValidityState);
}
