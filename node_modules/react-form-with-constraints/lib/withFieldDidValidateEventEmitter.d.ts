import EventEmitter from './EventEmitter';
import Constructor from './Constructor';
import Field from './Field';
export declare const FieldDidValidateEvent = "FIELD_DID_VALIDATE_EVENT";
declare const withFieldDidValidateEventEmitter: <TBase extends Constructor<{}>>(Base: TBase) => {
    new (...args: any[]): {
        fieldDidValidateEventEmitter: EventEmitter<void>;
        emitFieldDidValidateEvent(field: Field): Promise<void[]>;
        addFieldDidValidateEventListener(listener: (field: Field) => void): void;
        removeFieldDidValidateEventListener(listener: (field: Field) => void): void;
    };
} & TBase;
export { withFieldDidValidateEventEmitter };
