"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var InputElement = (function () {
    function InputElement(input) {
        if (input.props === undefined) {
            input = input;
            this.name = input.name;
            this.type = input.type;
            this.value = input.value;
            this.validity = new IValidityState(input.validity);
            this.validationMessage = input.validationMessage;
        }
        else {
            input = input;
            this.name = input.props.name;
            this.type = undefined;
            this.value = input.props.value;
            this.validity = undefined;
            this.validationMessage = undefined;
        }
    }
    return InputElement;
}());
exports.InputElement = InputElement;
var IValidityState = (function () {
    function IValidityState(validity) {
        this.badInput = validity.badInput;
        this.customError = validity.customError;
        this.patternMismatch = validity.patternMismatch;
        this.rangeOverflow = validity.rangeOverflow;
        this.rangeUnderflow = validity.rangeUnderflow;
        this.stepMismatch = validity.stepMismatch;
        this.tooLong = validity.tooLong;
        this.tooShort = validity.tooShort;
        this.typeMismatch = validity.typeMismatch;
        this.valid = validity.valid;
        this.valueMissing = validity.valueMissing;
    }
    return IValidityState;
}());
exports.IValidityState = IValidityState;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5wdXRFbGVtZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0lucHV0RWxlbWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVVBO0lBY0Usc0JBQVksS0FBOEY7UUFDeEcsSUFBSyxLQUFhLENBQUMsS0FBSyxLQUFLLFNBQVMsRUFBRTtZQUN0QyxLQUFLLEdBQUcsS0FBcUIsQ0FBQztZQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDdkIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztZQVN6QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksY0FBYyxDQUFDLEtBQUssQ0FBQyxRQUF5QixDQUFDLENBQUM7WUFFcEUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQztTQUNsRDthQUFNO1lBQ0wsS0FBSyxHQUFHLEtBQWtCLENBQUM7WUFDM0IsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsS0FBTSxDQUFDLElBQUksQ0FBQztZQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQWdCLENBQUM7WUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBTSxDQUFDLEtBQU0sQ0FBQztZQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQWdCLENBQUM7WUFDakMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFNBQWdCLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBeENELElBd0NDO0FBeENZLG9DQUFZO0FBNkN6QjtJQWFFLHdCQUFZLFFBQXVCO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNsQyxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUM7UUFDeEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDO1FBQ2hELElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQztRQUM1QyxJQUFJLENBQUMsY0FBYyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUM7UUFDOUMsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO1FBQzFDLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQztRQUNoQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO1FBQzFDLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUM7SUFDNUMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQTFCRCxJQTBCQztBQTFCWSx3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlZSBSZWFjdCBOYXRpdmUgVGV4dElucHV0IGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHRpbnB1dC5odG1sXG4vLyBIZXJlIHNvIHdlIGRvbid0IGhhdmUgdG8gXCJpbXBvcnQgeyBUZXh0SW5wdXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnXCIgYW5kIGRlcGVuZCBvbiBSZWFjdCBOYXRpdmVcbmV4cG9ydCBpbnRlcmZhY2UgVGV4dElucHV0IHtcbiAgLy92YWx1ZT86IHN0cmluZzsgLy8gQWx3YXlzIHVuZGVmaW5lZCwgdXNlIGluc3RlYWQgcHJvcHMudmFsdWVcbiAgcHJvcHM6IHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgdmFsdWU/OiBzdHJpbmc7XG4gIH07XG59XG5cbmV4cG9ydCBjbGFzcyBJbnB1dEVsZW1lbnQge1xuICByZWFkb25seSBuYW1lOiBzdHJpbmc7XG4gIHJlYWRvbmx5IHR5cGU6IHN0cmluZzsgLy8gTm90IG5lZWRlZCBpbnRlcm5hbGx5LCBjYW4gYmUgdGV4dCwgcmFkaW8uLi5cbiAgcmVhZG9ubHkgdmFsdWU6IHN0cmluZztcblxuICAvLyB2YWxpZGl0eSBhbmQgdmFsaWRhdGlvbk1lc3NhZ2UgYXZhaWxhYmxlIGZvciAobGliLmRvbS5kLnRzKTpcbiAgLy8gSFRNTEJ1dHRvbkVsZW1lbnQsIEhUTUxGaWVsZFNldEVsZW1lbnQsIEhUTUxJbnB1dEVsZW1lbnQsIEhUTUxPYmplY3RFbGVtZW50LFxuICAvLyBIVE1MT3V0cHV0RWxlbWVudCwgSFRNTFNlbGVjdEVsZW1lbnQsIEhUTUxUZXh0QXJlYUVsZW1lbnRcbiAgLy8gVmFsaWRpdHlTdGF0ZSBpcyBzdXBwb3J0ZWQgYnkgSUUgPj0gMTBcbiAgcmVhZG9ubHkgdmFsaWRpdHk6IElWYWxpZGl0eVN0YXRlO1xuICByZWFkb25seSB2YWxpZGF0aW9uTWVzc2FnZTogc3RyaW5nO1xuXG4gIC8vIE5lZWQgdG8gZHVwbGljYXRlIHRoZSBpbnB1dCB3aGVuIHRoZSB1c2VyIGNoYW5nZXMgcmFwaWRseSB0aGUgaW5wdXRcbiAgLy8gb3RoZXJ3aXNlIHdlIHdpbGwgdHJlYXQgb25seSB0aGUgbGFzdCBpbnB1dCB2YWx1ZSBpbnN0ZWFkIG9mIGV2ZXJ5IGlucHV0IHZhbHVlIGNoYW5nZVxuICBjb25zdHJ1Y3RvcihpbnB1dDogLypIVE1MSW5wdXRFbGVtZW50IHwgSFRNTFNlbGVjdEVsZW1lbnQgfCBIVE1MVGV4dEFyZWFFbGVtZW50Ki8gSW5wdXRFbGVtZW50IHwgVGV4dElucHV0KSB7XG4gICAgaWYgKChpbnB1dCBhcyBhbnkpLnByb3BzID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGlucHV0ID0gaW5wdXQgYXMgSW5wdXRFbGVtZW50O1xuICAgICAgdGhpcy5uYW1lID0gaW5wdXQubmFtZTtcbiAgICAgIHRoaXMudHlwZSA9IGlucHV0LnR5cGU7XG4gICAgICB0aGlzLnZhbHVlID0gaW5wdXQudmFsdWU7XG5cbiAgICAgIC8vIFNvbHV0aW9uIDE6IG5vIGNsb25lLCB0aGVuIC5tb2NrLmNhbGxzIG5ldmVyIGVuZHMgd2l0aCBWYWxpZGl0eVN0YXRlIGluc2lkZSBGb3JtV2l0aENvbnN0cmFpbnRzLnRlc3QudHN4IGluIHYwLjhcbiAgICAgIC8vdGhpcy52YWxpZGl0eSA9IGlucHV0LnZhbGlkaXR5O1xuXG4gICAgICAvLyBTb2x1dGlvbiAyOiBKU09OIGRvZXMgbm90IHdvcmsgdG8gY2xvbmUgVmFsaWRpdHlTdGF0ZSAocmVzdWx0cyBpbiBhbiBlbXB0eSBvYmplY3QpXG4gICAgICAvL3RoaXMudmFsaWRpdHkgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGlucHV0LnZhbGlkaXR5KSk7XG5cbiAgICAgIC8vIFNvbHV0aW9uIDM6IG1hbnVhbGx5IGNsb25lIFZhbGlkaXR5U3RhdGVcbiAgICAgIHRoaXMudmFsaWRpdHkgPSBuZXcgSVZhbGlkaXR5U3RhdGUoaW5wdXQudmFsaWRpdHkgYXMgVmFsaWRpdHlTdGF0ZSk7XG5cbiAgICAgIHRoaXMudmFsaWRhdGlvbk1lc3NhZ2UgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5wdXQgPSBpbnB1dCBhcyBUZXh0SW5wdXQ7XG4gICAgICB0aGlzLm5hbWUgPSBpbnB1dC5wcm9wcyEubmFtZTtcbiAgICAgIHRoaXMudHlwZSA9IHVuZGVmaW5lZCBhcyBhbnk7XG4gICAgICB0aGlzLnZhbHVlID0gaW5wdXQucHJvcHMhLnZhbHVlITsgLy8gVGVzdGVkOiBUZXh0SW5wdXQgcHJvcHMudmFsdWUgaXMgYWx3YXlzIGEgc3RyaW5nIGFuZCBuZXZlciB1bmRlZmluZWQgKGVtcHR5IHN0cmluZyBpbnN0ZWFkKVxuICAgICAgdGhpcy52YWxpZGl0eSA9IHVuZGVmaW5lZCBhcyBhbnk7XG4gICAgICB0aGlzLnZhbGlkYXRpb25NZXNzYWdlID0gdW5kZWZpbmVkIGFzIGFueTtcbiAgICB9XG4gIH1cbn1cblxuLy8gQ2Fubm90IGNsb25lIFZhbGlkaXR5U3RhdGUgdXNpbmcgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShpbnB1dC52YWxpZGl0eSkpLFxuLy8gcmVzdWx0cyBpbiBhbiBlbXB0eSBvYmplY3QgKHt9KSB1bmRlciBDaHJvbWUgNjYsIEZpcmVmb3ggNjAgYW5kIFNhZmFyaSAxMC4xLjJcbi8vIHNvIGxldCdzIG1hbnVhbGx5IGNsb25lIGl0LlxuZXhwb3J0IGNsYXNzIElWYWxpZGl0eVN0YXRlIGltcGxlbWVudHMgVmFsaWRpdHlTdGF0ZSB7XG4gIHJlYWRvbmx5IGJhZElucHV0OiBib29sZWFuO1xuICByZWFkb25seSBjdXN0b21FcnJvcjogYm9vbGVhbjtcbiAgcmVhZG9ubHkgcGF0dGVybk1pc21hdGNoOiBib29sZWFuO1xuICByZWFkb25seSByYW5nZU92ZXJmbG93OiBib29sZWFuO1xuICByZWFkb25seSByYW5nZVVuZGVyZmxvdzogYm9vbGVhbjtcbiAgcmVhZG9ubHkgc3RlcE1pc21hdGNoOiBib29sZWFuO1xuICByZWFkb25seSB0b29Mb25nOiBib29sZWFuO1xuICByZWFkb25seSB0b29TaG9ydDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdHlwZU1pc21hdGNoOiBib29sZWFuO1xuICByZWFkb25seSB2YWxpZDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdmFsdWVNaXNzaW5nOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHZhbGlkaXR5OiBWYWxpZGl0eVN0YXRlKSB7XG4gICAgdGhpcy5iYWRJbnB1dCA9IHZhbGlkaXR5LmJhZElucHV0O1xuICAgIHRoaXMuY3VzdG9tRXJyb3IgPSB2YWxpZGl0eS5jdXN0b21FcnJvcjtcbiAgICB0aGlzLnBhdHRlcm5NaXNtYXRjaCA9IHZhbGlkaXR5LnBhdHRlcm5NaXNtYXRjaDtcbiAgICB0aGlzLnJhbmdlT3ZlcmZsb3cgPSB2YWxpZGl0eS5yYW5nZU92ZXJmbG93O1xuICAgIHRoaXMucmFuZ2VVbmRlcmZsb3cgPSB2YWxpZGl0eS5yYW5nZVVuZGVyZmxvdztcbiAgICB0aGlzLnN0ZXBNaXNtYXRjaCA9IHZhbGlkaXR5LnN0ZXBNaXNtYXRjaDtcbiAgICB0aGlzLnRvb0xvbmcgPSB2YWxpZGl0eS50b29Mb25nO1xuICAgIHRoaXMudG9vU2hvcnQgPSB2YWxpZGl0eS50b29TaG9ydDtcbiAgICB0aGlzLnR5cGVNaXNtYXRjaCA9IHZhbGlkaXR5LnR5cGVNaXNtYXRjaDtcbiAgICB0aGlzLnZhbGlkID0gdmFsaWRpdHkudmFsaWQ7XG4gICAgdGhpcy52YWx1ZU1pc3NpbmcgPSB2YWxpZGl0eS52YWx1ZU1pc3Npbmc7XG4gIH1cbn1cbiJdfQ==