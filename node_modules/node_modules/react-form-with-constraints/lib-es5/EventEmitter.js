"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var EventEmitter = (function () {
    function EventEmitter() {
        this.listeners = new Map();
    }
    EventEmitter.prototype.emit = function (eventName) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var e_1, _a, listeners, ret, listeners_1, listeners_1_1, listener, _b, _c, e_1_1;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        listeners = this.listeners.get(eventName);
                        ret = new Array();
                        if (!(listeners !== undefined)) return [3, 8];
                        console.assert(listeners.length > 0, "No listener for event '" + eventName + "'");
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 6, 7, 8]);
                        listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next();
                        _d.label = 2;
                    case 2:
                        if (!!listeners_1_1.done) return [3, 5];
                        listener = listeners_1_1.value;
                        _c = (_b = ret).push;
                        return [4, listener.apply(void 0, __spread(args))];
                    case 3:
                        _c.apply(_b, [_d.sent()]);
                        _d.label = 4;
                    case 4:
                        listeners_1_1 = listeners_1.next();
                        return [3, 2];
                    case 5: return [3, 8];
                    case 6:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3, 8];
                    case 7:
                        try {
                            if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7];
                    case 8: return [2, ret];
                }
            });
        });
    };
    EventEmitter.prototype.addListener = function (eventName, listener) {
        if (!this.listeners.has(eventName))
            this.listeners.set(eventName, []);
        var listeners = this.listeners.get(eventName);
        console.assert(listeners.indexOf(listener) === -1, "Listener already added for event '" + eventName + "'");
        listeners.push(listener);
    };
    EventEmitter.prototype.removeListener = function (eventName, listener) {
        var listeners = this.listeners.get(eventName);
        console.assert(listeners !== undefined, "Unknown event '" + eventName + "'");
        var index = listeners.lastIndexOf(listener);
        console.assert(index > -1, "Listener not found for event '" + eventName + "'");
        listeners.splice(index, 1);
        if (listeners.length === 0)
            this.listeners.delete(eventName);
    };
    return EventEmitter;
}());
exports.default = EventEmitter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRFbWl0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0V2ZW50RW1pdHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT0E7SUFBQTtRQUNFLGNBQVMsR0FBRyxJQUFJLEdBQUcsRUFBMEMsQ0FBQztJQStDaEUsQ0FBQztJQTdDTywyQkFBSSxHQUFWLFVBQVcsU0FBaUI7UUFBRSxjQUFhO2FBQWIsVUFBYSxFQUFiLHFCQUFhLEVBQWIsSUFBYTtZQUFiLDZCQUFhOzs7Ozs7O3dCQUNuQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFFLENBQUM7d0JBSzNDLEdBQUcsR0FBRyxJQUFJLEtBQUssRUFBc0IsQ0FBQzs2QkFFeEMsQ0FBQSxTQUFTLEtBQUssU0FBUyxDQUFBLEVBQXZCLGNBQXVCO3dCQUN6QixPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLDRCQUEwQixTQUFTLE1BQUcsQ0FBQyxDQUFDOzs7O3dCQUN0RCxjQUFBLFNBQUEsU0FBUyxDQUFBOzs7O3dCQUFyQixRQUFRO3dCQU9qQixLQUFBLENBQUEsS0FBQSxHQUFHLENBQUEsQ0FBQyxJQUFJLENBQUE7d0JBQUMsV0FBTSxRQUFRLHdCQUFJLElBQUksSUFBQzs7d0JBQWhDLGNBQVMsU0FBdUIsRUFBQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7OzRCQUl0QyxXQUFPLEdBQUcsRUFBQzs7OztLQUNaO0lBRUQsa0NBQVcsR0FBWCxVQUFZLFNBQWlCLEVBQUUsUUFBc0M7UUFDbkUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN0RSxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUUsQ0FBQztRQUNqRCxPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsdUNBQXFDLFNBQVMsTUFBRyxDQUFDLENBQUM7UUFDdEcsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBTUQscUNBQWMsR0FBZCxVQUFlLFNBQWlCLEVBQUUsUUFBc0M7UUFDdEUsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFFLENBQUM7UUFDakQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEtBQUssU0FBUyxFQUFFLG9CQUFrQixTQUFTLE1BQUcsQ0FBQyxDQUFDO1FBRXhFLElBQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUUsbUNBQWlDLFNBQVMsTUFBRyxDQUFDLENBQUM7UUFDMUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFM0IsSUFBSSxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUM7WUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBaERELElBZ0RDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRklYTUVcbi8vIFNlZSBUaG91Z2h0cyBhYm91dCB2YXJpYWRpYyBnZW5lcmljcz8gaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy8xNzczXG4vLyBTZWUgUHJvcG9zYWw6IFZhcmlhZGljIEtpbmRzIC0tIEdpdmUgc3BlY2lmaWMgdHlwZXMgdG8gdmFyaWFkaWMgZnVuY3Rpb25zIGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvNTQ1M1xudHlwZSBBcmdzID0gYW55W107XG5cbnR5cGUgTGlzdGVuZXI8TGlzdGVuZXJSZXR1cm5UeXBlID0gdm9pZD4gPSAoLi4uYXJnczogQXJncykgPT4gTGlzdGVuZXJSZXR1cm5UeXBlIHwgUHJvbWlzZTxMaXN0ZW5lclJldHVyblR5cGU+O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudEVtaXR0ZXI8TGlzdGVuZXJSZXR1cm5UeXBlID0gdm9pZD4ge1xuICBsaXN0ZW5lcnMgPSBuZXcgTWFwPHN0cmluZywgTGlzdGVuZXI8TGlzdGVuZXJSZXR1cm5UeXBlPltdPigpO1xuXG4gIGFzeW5jIGVtaXQoZXZlbnROYW1lOiBzdHJpbmcsIC4uLmFyZ3M6IEFyZ3MpIHtcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycy5nZXQoZXZlbnROYW1lKSE7XG5cbiAgICAvLyBBc3NlcnQgZGlzYWJsZWQ6IGFuIGV2ZW4gY2FuIGJlIGVtaXR0ZWQgZXZlbiB3aXRob3V0IGxpc3RlbmVyc1xuICAgIC8vY29uc29sZS5hc3NlcnQobGlzdGVuZXJzICE9PSB1bmRlZmluZWQsIGBVbmtub3duIGV2ZW50ICcke2V2ZW50TmFtZX0nYCk7XG5cbiAgICBjb25zdCByZXQgPSBuZXcgQXJyYXk8TGlzdGVuZXJSZXR1cm5UeXBlPigpO1xuXG4gICAgaWYgKGxpc3RlbmVycyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLmFzc2VydChsaXN0ZW5lcnMubGVuZ3RoID4gMCwgYE5vIGxpc3RlbmVyIGZvciBldmVudCAnJHtldmVudE5hbWV9J2ApO1xuICAgICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBsaXN0ZW5lcnMpIHtcbiAgICAgICAgLy8gV2h5IGF3YWl0PyBUd28gY2FzZXM6XG4gICAgICAgIC8vIC0gbGlzdGVuZXIgZG9lcyBub3QgcmV0dXJuIGEgUHJvbWlzZTpcbiAgICAgICAgLy8gICA9PiBhd2FpdCBjaGFuZ2VzIG5vdGhpbmc6IHRoZSBuZXh0IGxpc3RlbmVyIGNhbGwgaGFwcGVucyB3aGVuIHRoZSBjdXJyZW50IG9uZSBpcyBkb25lXG4gICAgICAgIC8vIC0gbGlzdGVuZXIgcmV0dXJucyBhIFByb21pc2U6XG4gICAgICAgIC8vICAgPT4gd2FpdCBmb3IgdGhlIGxpc3RlbmVyIGNhbGwgdG8gZmluaXNoIChlLmcgbGlzdGVuZXJzIGFyZSBleGVjdXRlZCBpbiBzZXF1ZW5jZSksXG4gICAgICAgIC8vICAgICAgd2l0aG91dCB3ZSB3b3VsZCBjYWxsIGVhY2ggbGlzdGVuZXIgd2l0aG91dCB3YWl0aW5nIGZvciB0aGVpciByZXN1bHRzXG4gICAgICAgIHJldC5wdXNoKGF3YWl0IGxpc3RlbmVyKC4uLmFyZ3MpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgYWRkTGlzdGVuZXIoZXZlbnROYW1lOiBzdHJpbmcsIGxpc3RlbmVyOiBMaXN0ZW5lcjxMaXN0ZW5lclJldHVyblR5cGU+KSB7XG4gICAgaWYgKCF0aGlzLmxpc3RlbmVycy5oYXMoZXZlbnROYW1lKSkgdGhpcy5saXN0ZW5lcnMuc2V0KGV2ZW50TmFtZSwgW10pO1xuICAgIGNvbnN0IGxpc3RlbmVycyA9IHRoaXMubGlzdGVuZXJzLmdldChldmVudE5hbWUpITtcbiAgICBjb25zb2xlLmFzc2VydChsaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcikgPT09IC0xLCBgTGlzdGVuZXIgYWxyZWFkeSBhZGRlZCBmb3IgZXZlbnQgJyR7ZXZlbnROYW1lfSdgKTtcbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gIH1cblxuICAvLyBTZWUgaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9ldmVudHMuaHRtbCNldmVudHNfZW1pdHRlcl9yZW1vdmVsaXN0ZW5lcl9ldmVudG5hbWVfbGlzdGVuZXJcbiAgLy8gXCJyZW1vdmVMaXN0ZW5lciB3aWxsIHJlbW92ZSwgYXQgbW9zdCwgb25lIGluc3RhbmNlIG9mIGEgbGlzdGVuZXIgZnJvbSB0aGUgbGlzdGVuZXIgYXJyYXkuXG4gIC8vIElmIGFueSBzaW5nbGUgbGlzdGVuZXIgaGFzIGJlZW4gYWRkZWQgbXVsdGlwbGUgdGltZXMgdG8gdGhlIGxpc3RlbmVyIGFycmF5IGZvciB0aGUgc3BlY2lmaWVkIGV2ZW50TmFtZSxcbiAgLy8gdGhlbiByZW1vdmVMaXN0ZW5lciBtdXN0IGJlIGNhbGxlZCBtdWx0aXBsZSB0aW1lcyB0byByZW1vdmUgZWFjaCBpbnN0YW5jZS5cIlxuICByZW1vdmVMaXN0ZW5lcihldmVudE5hbWU6IHN0cmluZywgbGlzdGVuZXI6IExpc3RlbmVyPExpc3RlbmVyUmV0dXJuVHlwZT4pIHtcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycy5nZXQoZXZlbnROYW1lKSE7XG4gICAgY29uc29sZS5hc3NlcnQobGlzdGVuZXJzICE9PSB1bmRlZmluZWQsIGBVbmtub3duIGV2ZW50ICcke2V2ZW50TmFtZX0nYCk7XG5cbiAgICBjb25zdCBpbmRleCA9IGxpc3RlbmVycy5sYXN0SW5kZXhPZihsaXN0ZW5lcik7XG4gICAgY29uc29sZS5hc3NlcnQoaW5kZXggPiAtMSwgYExpc3RlbmVyIG5vdCBmb3VuZCBmb3IgZXZlbnQgJyR7ZXZlbnROYW1lfSdgKTtcbiAgICBsaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgIGlmIChsaXN0ZW5lcnMubGVuZ3RoID09PSAwKSB0aGlzLmxpc3RlbmVycy5kZWxldGUoZXZlbnROYW1lKTtcbiAgfVxufVxuIl19