export class InputElement {
    constructor(input) {
        if (input.props === undefined) {
            input = input;
            this.name = input.name;
            this.type = input.type;
            this.value = input.value;
            this.validity = new IValidityState(input.validity);
            this.validationMessage = input.validationMessage;
        }
        else {
            input = input;
            this.name = input.props.name;
            this.type = undefined;
            this.value = input.props.value;
            this.validity = undefined;
            this.validationMessage = undefined;
        }
    }
}
export class IValidityState {
    constructor(validity) {
        this.badInput = validity.badInput;
        this.customError = validity.customError;
        this.patternMismatch = validity.patternMismatch;
        this.rangeOverflow = validity.rangeOverflow;
        this.rangeUnderflow = validity.rangeUnderflow;
        this.stepMismatch = validity.stepMismatch;
        this.tooLong = validity.tooLong;
        this.tooShort = validity.tooShort;
        this.typeMismatch = validity.typeMismatch;
        this.valid = validity.valid;
        this.valueMissing = validity.valueMissing;
    }
}
