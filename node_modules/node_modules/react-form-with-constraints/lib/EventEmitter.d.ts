declare type Args = any[];
declare type Listener<ListenerReturnType = void> = (...args: Args) => ListenerReturnType | Promise<ListenerReturnType>;
export default class EventEmitter<ListenerReturnType = void> {
    listeners: Map<string, Listener<ListenerReturnType>[]>;
    emit(eventName: string, ...args: Args): Promise<ListenerReturnType[]>;
    addListener(eventName: string, listener: Listener<ListenerReturnType>): void;
    removeListener(eventName: string, listener: Listener<ListenerReturnType>): void;
}
export {};
